name: Build application for Linux

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10" 
        
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2.5.1
      with:
        key: ${{ secrets.DEPLOY_BLINK_DETECTION_BACKEND }}
        name: id_rsa # optional
        known_hosts: unnecessary
        if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)

    - name: Checkout submodules
      run: |
        git submodule update --init

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_mac.txt
        pip install cx-freeze
        pip install ./submodules/eyeblink-detection

    - name: Build binary
      run: |
        # build to binary with cxfreeze library, it uses the setup.py and pyproject.toml files
        python3 setup.py build 

    - name: Package to deb
      run: |
        # create the folder structure for the deb package
        # all the files for the program will be in /opt/eyehealth, so easy handle of dependencies
        mkdir -p deb_build/opt/eyehealth 
        
        ls build
        
        # we copy the files from the build folder to the deb package folder before deb creation
        cp -R build/exe.linux-x86_64-3.10/* deb_build/opt/eyehealth

        # we change the permissions of the files and folders because files will keep permissions after packaging
        find deb_build/opt/eyehealth -type f -exec chmod 644 -- {} +
        find deb_build/opt/eyehealth -type d -exec chmod 755 -- {} +

        # we make the binary executable (not done by cxfreeze)
        chmod +x deb_build/opt/eyehealth/eyehealth

        # build the deb package with the official tool
        # dpkg-deb --build --root-owner-group deb_build eyehealth_${{  github.ref_name }}_all.deb
        dpkg-deb --build --root-owner-group deb_build eyehealth_2.0.1_all.deb

        ls

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows_build
        path: eyehealth_${{  github.ref_name }}_all.deb
