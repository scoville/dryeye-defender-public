name: Build and Release on all platforms
on:
  push:
    tags:
      - '*'
  workflow_dispatch: null
jobs:
  build:
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Build with cx_Freeze
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            # Windows commands
            echo "Running Windows build"
            mkdir dist/
            echo "test" > dist/eyeblink_gui-2.0.0-win64.msi
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            # MacOS commands
            echo "Running MacOS build"
            mkdir build/
            echo "test" > build/Eyeblink_GUI.dmg
          else
            # Linux commands
            echo "Running Linux build"    
            echo "test" > eyehealth_2.0.0_all.deb
          fi
        shell: bash
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: '${{ matrix.os }}_build'
          path: |
            ${{ matrix.os == 'windows-latest' && 'dist/eyeblink_gui-2.0.0-win64.msi' }}
            ${{ matrix.os == 'macos-latest' && 'build/Eyeblink_GUI.dmg' }}
            ${{ matrix.os == 'ubuntu-latest' && 'eyehealth_2.0.0_all.deb' }}
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
          
      - name: ls everything
        run: |
          ls -R
          ls windows-latest_build
          ls macos-latest_build
          ls ubuntu-latest_build
          # unzip -q windows-latest_build.zip -d windows-latest_build
          # unzip -q macos-latest_build.zip -d macos-latest_build
          # unzip -q ubuntu-latest_build.zip -d ubuntu-latest_build
      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: >-
            ./windows-latest_build/windows-latest_build,
            ./macos-latest_build/macos-latest_build,
            ./ubuntu-latest_build/ubuntu-latest_build
          token: '${{ secrets.GITHUB_TOKEN }}'
          name: 'Release ${{ github.ref }}'
          tag: '${{ github.ref_name }}'
          allowUpdates: true
          replacesArtifacts: false
          generateReleaseNotes : true